---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ingester
spec:
  replicas: 3

  # Ingesters are not ready for at least 1 min
  # after creation.  This has to be in sync with
  # the ring timeout value, as this will stop a
  # stampede of new ingesters if we should loose
  # some.
  minReadySeconds: 60

  # Having maxSurge 0 and maxUnavailable 1 means
  # the deployment will update one ingester at a time
  # as it will have to stop one (making one unavailable)
  # before it can start one (surge of zero)
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1

  template:
    metadata:
      labels:
        name: ingester
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      # Give ingesters 40 minutes grace to flush chunks and exit cleanly.
      # Service is available during this time, as long as we don't stop
      # too many ingesters at once.
      terminationGracePeriodSeconds: 2400

      containers:
      - name: ingester
        image: mjsjinsu/ingester:20190322
        resources:
          limits:
            cpu: 4000m
            memory: 4Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        imagePullPolicy: IfNotPresent
        args:
        - -log.level=info
        - -ingester.join-after=30s
        - -ingester.claim-on-rollout=false
        - -ingester.num-tokens=512
        - -ingester.chunk-encoding=3
        - -ingester.max-chunk-idle=5m
        - -ingester.concurrent-flushes=350
        - -ingester.normalise-tokens=true
        - -ingester.retain-period=5m
        - -ingester.max-series-per-metric=100000
        - -ingester-client.expected-timeseries=1000
        - -ingester-client.expected-samples-per-series=2 # default of 10 is way too high
        - -ingester.max-series-per-user=10000000
        - -consul.hostname=consul.monitoring.svc.cluster.local:8500
        - -distributor.replication-factor=3
        - -distributor.ingestion-rate-limit=1000000
        - -distributor.ingestion-burst-size=5000000
        - -chunk.storage-client=cassandra
        - -cassandra.ssl=false
        - -cassandra.host-verification=false
        - -cassandra.addresses=cassandra.monitoring.svc.cluster.local:9042
        - -cassandra.keyspace=cortex
        - -cassandra.timeout=1s
        - -dynamodb.periodic-table.prefix=cortex_weekly_
        - -dynamodb.periodic-table.from=2019-01-01
        - -dynamodb.original-table-name=cortex
        - -dynamodb.daily-buckets-from=2019-01-01
        - -dynamodb.base64-buckets-from=2019-01-01
        - -dynamodb.v6-schema-from=2019-01-01
        - -dynamodb.use-periodic-tables=true
        - -dynamodb.chunk-table.from=2019-01-01
        - -memcached.hostname=memcached.monitoring.svc.cluster.local
        - -memcached.timeout=1s
        - -memcached.service=memcached
        - -cache.enable-diskcache=true
        - -store.index-cache-read.cache.enable-diskcache=true 
        - -store.index-cache-read.diskcache.size=1073741824
        - -store.index-cache-write.cache.enable-diskcache=true
        - -store.index-cache-write.diskcache.size=1073741824
        - -store.index-cache-write.memcache.write-back-buffer=1000000
        - -store.index-cache-write.memcached.hostname=memcached.monitoring.svc.cluster.local
        - -store.index-cache-write.memcached.expiration=24h
        - -store.index-cache-write.memcached.timeout=1s
        - -store.index-cache-write.memcached.service=memcached
        - -store.min-chunk-age=5m
        env:
        - name: GOGC
          value: "60"        
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 5
